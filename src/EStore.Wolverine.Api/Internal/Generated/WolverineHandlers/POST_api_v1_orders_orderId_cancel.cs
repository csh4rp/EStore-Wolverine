// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using System;
using System.Linq;
using Wolverine.Http;
using Wolverine.Runtime;

namespace Internal.Generated.WolverineHandlers
{
    // START: POST_api_v1_orders_orderId_cancel
    public class POST_api_v1_orders_orderId_cancel : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _wolverineHttpOptions;
        private readonly Wolverine.Runtime.IWolverineRuntime _wolverineRuntime1;
        private readonly Wolverine.Runtime.IWolverineRuntime _wolverineRuntime2;

        public POST_api_v1_orders_orderId_cancel(Wolverine.Http.WolverineHttpOptions wolverineHttpOptions, Wolverine.Runtime.IWolverineRuntime __wolverineRuntime1, Wolverine.Runtime.IWolverineRuntime __wolverineRuntime2) : base(wolverineHttpOptions)
        {
            _wolverineHttpOptions = wolverineHttpOptions;
            _wolverineRuntime1 = __wolverineRuntime1;
            _wolverineRuntime2 = __wolverineRuntime2;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var messageContext1 = new Wolverine.Runtime.MessageContext(_wolverineRuntime1);
            var messageContext2 = new Wolverine.Runtime.MessageContext(_wolverineRuntime2);
            Wolverine.Http.Runtime.RequestIdMiddleware.Apply(httpContext, messageContext1);
            if (!long.TryParse((string)httpContext.GetRouteValue("orderId"), out var orderId))
            {
                httpContext.Response.StatusCode = 404;
                return;
            }


            await EStore.Wolverine.Api.Endpoints.OrderEndpoints.CancelAsync(orderId, messageContext2).ConfigureAwait(false);
            // Wolverine automatically sets the status code to 204 for empty responses
            httpContext.Response.StatusCode = 204;
        }

    }

    // END: POST_api_v1_orders_orderId_cancel
    
    
}

