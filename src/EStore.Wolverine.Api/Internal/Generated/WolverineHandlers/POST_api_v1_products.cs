// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using System;
using System.Linq;
using Wolverine.Http;
using Wolverine.Runtime;

namespace Internal.Generated.WolverineHandlers
{
    // START: POST_api_v1_products
    public class POST_api_v1_products : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _wolverineHttpOptions;
        private readonly Wolverine.Runtime.IWolverineRuntime _wolverineRuntime1;
        private readonly Wolverine.Runtime.IWolverineRuntime _wolverineRuntime2;

        public POST_api_v1_products(Wolverine.Http.WolverineHttpOptions wolverineHttpOptions, Wolverine.Runtime.IWolverineRuntime __wolverineRuntime1, Wolverine.Runtime.IWolverineRuntime __wolverineRuntime2) : base(wolverineHttpOptions)
        {
            _wolverineHttpOptions = wolverineHttpOptions;
            _wolverineRuntime1 = __wolverineRuntime1;
            _wolverineRuntime2 = __wolverineRuntime2;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var messageContext2 = new Wolverine.Runtime.MessageContext(_wolverineRuntime2);
            var messageContext1 = new Wolverine.Runtime.MessageContext(_wolverineRuntime1);
            Wolverine.Http.Runtime.RequestIdMiddleware.Apply(httpContext, messageContext1);
            var (command, jsonContinue) = await ReadJsonAsync<EStore.Wolverine.Contracts.Commands.Products.CreateProductCommand>(httpContext);
            if (jsonContinue == Wolverine.HandlerContinuation.Stop) return;
            var createdResult_response = await EStore.Wolverine.Api.Endpoints.ProductEndpoints.CreateAsync(command, messageContext2).ConfigureAwait(false);
            await WriteJsonAsync(httpContext, createdResult_response);
        }

    }

    // END: POST_api_v1_products
    
    
}

